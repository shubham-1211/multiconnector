<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.3 on win32)" generated="20210201 15:57:35.812" rpa="false">
<suite id="s1" name="Connector Tests" source="C:\Users\artor\WebstormProjects\multi-connector\robottests\connectors\iq-vision-mqtt\connector_tests.robot">
<test id="s1-t1" name="fetch, 200">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210201 15:57:36.065" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}}</msg>
<status status="PASS" starttime="20210201 15:57:36.064" endtime="20210201 15:57:36.065"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20210201 15:57:36.065" level="INFO">${now} = 2021-02-01T13:57:36+00:00</msg>
<status status="PASS" starttime="20210201 15:57:36.065" endtime="20210201 15:57:36.065"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:36.065" endtime="20210201 15:57:36.065"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:36.065" endtime="20210201 15:57:36.065"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20210201 15:57:36.066" level="INFO">${json_string} = {"productCode": "iq-vision-temperature", "parameters": {"ids": ["sites/hemso/A/1/406/TE/21", "sites/hemso/A/1/406/TE/20", "sites/hemso/A/2/405/TE/20"]}, "timestamp": "2021-02-01T13:57:36+00:00"}</msg>
<status status="PASS" starttime="20210201 15:57:36.065" endtime="20210201 15:57:36.066"></status>
</kw>
<msg timestamp="20210201 15:57:36.066" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}, 'timestamp': '2021-02-01T13:57:36+00:00'}</msg>
<status status="PASS" starttime="20210201 15:57:36.064" endtime="20210201 15:57:36.066"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20210201 15:57:36.067" level="INFO">${signature} = IsehRCHTX7ScpwIeCwJKASAGhG5dWnz9sNp/C3cVetY=</msg>
<status status="PASS" starttime="20210201 15:57:36.067" endtime="20210201 15:57:36.067"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:36.067" endtime="20210201 15:57:36.067"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${CONNECTOR_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:36.067" endtime="20210201 15:57:38.171"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20210201 15:57:38.171" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Sensor/"
        },
        "data": {
            "type": "object",
            "properties": {
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "measurements": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "@type": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "timestamp",
                                        "value"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "id",
                            "measurements"
                        ]
                    },
                    "default": [
                        {
                            "id": "sites/hemso/A/1/406/TE/21",
                            "measurements": [
                                {
                                    "@type": "MeasureAirTemperatureCelsiusDegree",
                                    "timestamp": "2021-02-01T13:57:38.092Z",
                                    "value": 24
                                }
                            ]
                        }
                    ]
                }
            },
            "required": [
                "sensors"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2021-02-01T15:57:38+02:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "O7vzZYpPK2DY5/tI7FzuwqcqVVUYKRPhgfGocRYKvi+IhqMNKChTOUwKPE75/zzpjqU51bc5k2GNitfh5lLvxRXSiqv9mGdFe03VA07iYiwTznzZ3gIs66RRsJ1yJ2wAwxUYyXtaanb4OMOG/Er+QACNwWmj4eLM/q82EgW6SQPZt24tG2XQB5RBteK6mZZfPxNPxnuzYOYewhsR2nhs+x9DtBAhbWOGdrxtHBgMT9iF3amzSDEZOvIamI3pTQKq29p03SCVqzmMlAr7BvuWNR+y3zM7jdf/6DGfDnCJBFNxd1Vjo9Y2DwmIAeJs/dbyxM4LfMCzS+xp+2Jy5iCVemFzWvlj2I++ltluHfzV18pQghhDUN+TmXc0WIo59YMbRZD91olrLUCuXS+lItIv0OcgS5h5LfDpMi+iY5yIS3WPfAEBwu6uqvx/tKHTj2JLaU8iCMjPjrfblnnt43nNAXT8TSQFP9pWFmmLi3fglP9zysLvsK9G89ms7KSIY9mcbzd6gG9rW4llVDPdzjpd02sCmlzHyjqCi+g8P7WMdsYIZdusaG1ItZbDvpmQAdE6TmkKQbPuM3Oqe69mvjRe3uCySaU9gbZ07a7TsDRBgcfWC1jmoRl2KRtqCcqk9t9A5QKMKz9ONqFQX1DmTmsmJ9ot7kdmJndBhihznBiX5A4="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20210201 15:57:38.171" endtime="20210201 15:57:38.185"></status>
</kw>
<status status="PASS" starttime="20210201 15:57:36.066" endtime="20210201 15:57:38.185"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.186" endtime="20210201 15:57:38.186"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Sensor/</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.187" endtime="20210201 15:57:38.187"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.188" endtime="20210201 15:57:38.188"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.189" endtime="20210201 15:57:38.189"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors 0 measurements</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.190" endtime="20210201 15:57:38.190"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 @type</arg>
<arg>MeasureAirTemperatureCelsiusDegree</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.190" endtime="20210201 15:57:38.191"></status>
</kw>
<tags>
<tag>bug-0001</tag>
</tags>
<status status="PASS" starttime="20210201 15:57:36.064" endtime="20210201 15:57:38.191" critical="yes"></status>
</test>
<test id="s1-t2" name="fetch, 422, Missing data for timestamp required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210201 15:57:38.193" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}}</msg>
<status status="PASS" starttime="20210201 15:57:38.193" endtime="20210201 15:57:38.193"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20210201 15:57:38.194" level="INFO">${now} = 2021-02-01T13:57:38+00:00</msg>
<status status="PASS" starttime="20210201 15:57:38.193" endtime="20210201 15:57:38.194"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.194" endtime="20210201 15:57:38.194"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.194" endtime="20210201 15:57:38.194"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20210201 15:57:38.194" level="INFO">${json_string} = {"productCode": "iq-vision-temperature", "parameters": {"ids": ["sites/hemso/A/1/406/TE/21", "sites/hemso/A/1/406/TE/20", "sites/hemso/A/2/405/TE/20"]}, "timestamp": "2021-02-01T13:57:38+00:00"}</msg>
<status status="PASS" starttime="20210201 15:57:38.194" endtime="20210201 15:57:38.195"></status>
</kw>
<msg timestamp="20210201 15:57:38.195" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}, 'timestamp': '2021-02-01T13:57:38+00:00'}</msg>
<status status="PASS" starttime="20210201 15:57:38.193" endtime="20210201 15:57:38.195"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.195" endtime="20210201 15:57:38.195"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20210201 15:57:38.196" level="INFO">${signature} = yaAblchrixPInrsSVZSZiB3eIRUwWu9MVkRgz/DRLSQ=</msg>
<status status="PASS" starttime="20210201 15:57:38.196" endtime="20210201 15:57:38.196"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.196" endtime="20210201 15:57:38.196"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${CONNECTOR_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:38.196" endtime="20210201 15:57:40.203"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20210201 15:57:40.204" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "timestamp": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "timestamp"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20210201 15:57:40.204" endtime="20210201 15:57:40.205"></status>
</kw>
<status status="PASS" starttime="20210201 15:57:38.196" endtime="20210201 15:57:40.205"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:40.206" endtime="20210201 15:57:40.210"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:40.210" endtime="20210201 15:57:40.210"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message timestamp 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:40.211" endtime="20210201 15:57:40.211"></status>
</kw>
<tags>
<tag>bug-0002</tag>
</tags>
<status status="PASS" starttime="20210201 15:57:38.192" endtime="20210201 15:57:40.212" critical="yes"></status>
</test>
<test id="s1-t3" name="fetch, 422, Missing data for parameters required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210201 15:57:40.214" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}}</msg>
<status status="PASS" starttime="20210201 15:57:40.214" endtime="20210201 15:57:40.214"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20210201 15:57:40.215" level="INFO">${now} = 2021-02-01T13:57:40+00:00</msg>
<status status="PASS" starttime="20210201 15:57:40.214" endtime="20210201 15:57:40.215"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:40.215" endtime="20210201 15:57:40.215"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:40.215" endtime="20210201 15:57:40.215"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20210201 15:57:40.216" level="INFO">${json_string} = {"productCode": "iq-vision-temperature", "parameters": {"ids": ["sites/hemso/A/1/406/TE/21", "sites/hemso/A/1/406/TE/20", "sites/hemso/A/2/405/TE/20"]}, "timestamp": "2021-02-01T13:57:40+00:00"}</msg>
<status status="PASS" starttime="20210201 15:57:40.215" endtime="20210201 15:57:40.216"></status>
</kw>
<msg timestamp="20210201 15:57:40.216" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}, 'timestamp': '2021-02-01T13:57:40+00:00'}</msg>
<status status="PASS" starttime="20210201 15:57:40.214" endtime="20210201 15:57:40.216"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body}</arg>
<arg>parameters</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:40.216" endtime="20210201 15:57:40.216"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20210201 15:57:40.217" level="INFO">${signature} = TKmjDls4F+iC1lWcDulP32XS+OQwF3kf1ftlTlkoe64=</msg>
<status status="PASS" starttime="20210201 15:57:40.217" endtime="20210201 15:57:40.217"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:40.217" endtime="20210201 15:57:40.217"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${CONNECTOR_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:40.218" endtime="20210201 15:57:42.226"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20210201 15:57:42.226" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20210201 15:57:42.226" endtime="20210201 15:57:42.228"></status>
</kw>
<status status="PASS" starttime="20210201 15:57:40.217" endtime="20210201 15:57:42.228"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:42.228" endtime="20210201 15:57:42.229"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:42.229" endtime="20210201 15:57:42.230"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:42.230" endtime="20210201 15:57:42.230"></status>
</kw>
<tags>
<tag>bug-0003</tag>
</tags>
<status status="PASS" starttime="20210201 15:57:40.213" endtime="20210201 15:57:42.231" critical="yes"></status>
</test>
<test id="s1-t4" name="fetch, 422, Missing data for ids required field">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210201 15:57:42.236" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}}</msg>
<status status="PASS" starttime="20210201 15:57:42.232" endtime="20210201 15:57:42.236"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20210201 15:57:42.237" level="INFO">${now} = 2021-02-01T13:57:42+00:00</msg>
<status status="PASS" starttime="20210201 15:57:42.236" endtime="20210201 15:57:42.237"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:42.237" endtime="20210201 15:57:42.237"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:42.237" endtime="20210201 15:57:42.237"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20210201 15:57:42.237" level="INFO">${json_string} = {"productCode": "iq-vision-temperature", "parameters": {"ids": ["sites/hemso/A/1/406/TE/21", "sites/hemso/A/1/406/TE/20", "sites/hemso/A/2/405/TE/20"]}, "timestamp": "2021-02-01T13:57:42+00:00"}</msg>
<status status="PASS" starttime="20210201 15:57:42.237" endtime="20210201 15:57:42.237"></status>
</kw>
<msg timestamp="20210201 15:57:42.238" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}, 'timestamp': '2021-02-01T13:57:42+00:00'}</msg>
<status status="PASS" starttime="20210201 15:57:42.232" endtime="20210201 15:57:42.238"></status>
</kw>
<kw name="Pop From Dictionary" library="Collections">
<doc>Pops the given ``key`` from the ``dictionary`` and returns its value.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>ids</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:42.238" endtime="20210201 15:57:42.238"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20210201 15:57:42.239" level="INFO">${signature} = EVoaQx+CkwJGZPDrwUsRl+cAyvdKUCOm6qdWYHD6uHI=</msg>
<status status="PASS" starttime="20210201 15:57:42.239" endtime="20210201 15:57:42.239"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:42.239" endtime="20210201 15:57:42.239"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${CONNECTOR_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:42.239" endtime="20210201 15:57:44.246"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20210201 15:57:44.246" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 422
                },
                "message": {
                    "type": "object",
                    "properties": {
                        "parameters.ids": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [
                                "Missing data for required field."
                            ]
                        }
                    },
                    "required": [
                        "parameters.ids"
                    ]
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20210201 15:57:44.246" endtime="20210201 15:57:44.248"></status>
</kw>
<status status="PASS" starttime="20210201 15:57:42.239" endtime="20210201 15:57:44.248"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:44.251" endtime="20210201 15:57:44.251"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response body error status</arg>
<arg>422</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:44.251" endtime="20210201 15:57:44.252"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body error message parameters.ids 0</arg>
<arg>Missing data for required field.</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:44.252" endtime="20210201 15:57:44.252"></status>
</kw>
<tags>
<tag>bug-0004</tag>
</tags>
<status status="PASS" starttime="20210201 15:57:42.232" endtime="20210201 15:57:44.253" critical="yes"></status>
</test>
<test id="s1-t5" name="fetch, 200, Empty ids">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210201 15:57:44.254" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}}</msg>
<status status="PASS" starttime="20210201 15:57:44.254" endtime="20210201 15:57:44.254"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20210201 15:57:44.254" level="INFO">${now} = 2021-02-01T13:57:44+00:00</msg>
<status status="PASS" starttime="20210201 15:57:44.254" endtime="20210201 15:57:44.254"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:44.254" endtime="20210201 15:57:44.255"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:44.255" endtime="20210201 15:57:44.258"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20210201 15:57:44.258" level="INFO">${json_string} = {"productCode": "iq-vision-temperature", "parameters": {"ids": ["sites/hemso/A/1/406/TE/21", "sites/hemso/A/1/406/TE/20", "sites/hemso/A/2/405/TE/20"]}, "timestamp": "2021-02-01T13:57:44+00:00"}</msg>
<status status="PASS" starttime="20210201 15:57:44.258" endtime="20210201 15:57:44.258"></status>
</kw>
<msg timestamp="20210201 15:57:44.258" level="INFO">${body} = {'productCode': 'iq-vision-temperature', 'parameters': {'ids': ['sites/hemso/A/1/406/TE/21', 'sites/hemso/A/1/406/TE/20', 'sites/hemso/A/2/405/TE/20']}, 'timestamp': '2021-02-01T13:57:44+00:00'}</msg>
<status status="PASS" starttime="20210201 15:57:44.254" endtime="20210201 15:57:44.258"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body["parameters"]}</arg>
<arg>ids=@{EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:44.259" endtime="20210201 15:57:44.259"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20210201 15:57:44.260" level="INFO">${signature} = Nuf2fZ8npCXoHxgV3pPVBDuQwF0pBd0lLFki3LVzSXU=</msg>
<status status="PASS" starttime="20210201 15:57:44.260" endtime="20210201 15:57:44.260"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:44.260" endtime="20210201 15:57:44.260"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${CONNECTOR_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:44.261" endtime="20210201 15:57:46.272"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20210201 15:57:46.273" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductOutput/Sensor/"
        },
        "data": {
            "type": "object",
            "properties": {
                "sensors": {
                    "type": "array",
                    "default": []
                }
            },
            "required": [
                "sensors"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2021-02-01T15:57:46+02:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "IrVTzIeNP5JHOe/vAKw7VLxHC5TOWwKopuX4D88xMVs0b6TtRDgrBmFV9rk3l/1M8ENptLK1+2yZBgvqulK+GsoPRT76Z95nv861aT9QYUrSpKbFRojUnvO+ZzTeTItkWsTjAGyn7L+1n4qDBnHZ5SxFhZpWPm7RXLgsOxGLMEcAutna93bKXzJveThQcVp43dZeUXkJBIjMapAid3YyYwkv/ejercPxO83OwZrZekgsHB7fsWoi/kUJ+0t00zutBqofK89cA4EiYAuCKEKpFdtqZ3BQLRSQ4dBYm6JgdobdTBp5EFSTbrxaXw/LfX27qwJWoEA65qvK5biGV5yydt2ldEQyGQAHHdfG5kQXyt46Bfcez3JD2SaJpk9N7flqEhv4yKcZofQWy6WE3eCx3oLAu0eHn8E2mKbg0pJdzaEXLmK3eNTohv2WmfcEJ6UDuHyMN0hxk0zamrhLKzhP4iXidE8eE6DXWNxcAHAmgO6plgPlL0cL76PJMZxviShDviXuBo++zjLhH0SbNF0SuEiCa59KHCdBJ7b6CVh/oPDhh8XA5Wvia4qX/6BGdtP2FfZpjf6BjqUOWv/6dEqW/kIEpmePgw7iqjuYTsBG9k0zwpfUwr4nHGWKCFeGRrBA29tQImrY8tVJq0YdhBj5z+HsFagZR2YgvlKXiQ8by4g="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20210201 15:57:46.273" endtime="20210201 15:57:46.275"></status>
</kw>
<status status="PASS" starttime="20210201 15:57:44.260" endtime="20210201 15:57:46.275"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:46.278" endtime="20210201 15:57:46.290"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductOutput/Sensor/</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:46.291" endtime="20210201 15:57:46.291"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
<arg>maxItems=0</arg>
</arguments>
<status status="PASS" starttime="20210201 15:57:46.292" endtime="20210201 15:57:46.292"></status>
</kw>
<tags>
<tag>bug-0005</tag>
</tags>
<status status="PASS" starttime="20210201 15:57:44.253" endtime="20210201 15:57:46.292" critical="yes"></status>
</test>
<doc>IQ Vision MQTT Tests</doc>
<status status="PASS" starttime="20210201 15:57:35.813" endtime="20210201 15:57:46.294"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">bug-0001</stat>
<stat pass="1" fail="0">bug-0002</stat>
<stat pass="1" fail="0">bug-0003</stat>
<stat pass="1" fail="0">bug-0004</stat>
<stat pass="1" fail="0">bug-0005</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="Connector Tests">Connector Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
